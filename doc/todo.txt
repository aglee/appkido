:--- APPKIDO TO-DO ---:

[ ] NSResponder -> acceptsFirstResponder -> YES opens browser window

[ ] install Xcode 2.5 and 3.1 at home and on Flint

[ ] look for [agl] REMOVE

[ ] generate separate "AppKiDo for iPhone"
	[x] create two targets in Xcode
	[x] have two different identifiers (com.appkido... ?)
	[x] create different icon
	[ ] use separate xml file for "check for update"

[ ] make sure mailing list has latest people who asked to be on it

[ ] write release notes:
	* can/must set dev tools location
	* more supported frameworks if you use xcode 3
	* "open doc url in browser" in contextual menu
	* improved hyperlinks (go to the right place; don't open browser; thanks to Gerriet)
	* better leopard support -- gets all classes, does properties
	* keyboard shortcuts have changed (command-(number))
	* Select All/Deselect All in frameworks prefs
	* prefix searches
	* iPhone!  NB you'll get all frameworks regardless of prefs panel
	* nb code has changed a lot (docs not caught up) and more big changes are in store

----------------------------------------------------------
*** 0.99 stuff (Xcode 3.x only?) ***

===== efficiency =====

[ ] parse faster
	* write new pure-C parser, use different strategy
	* have list of HTML tags I care about, and attributes within those tags, and in the special case of tags that I designate as "header" tags (h1, h2, etc. but could also include 
	* pluck out byte offsets of where those tags begin and end, and their values for those attributes (in particular, the "name" attribute for anchor tags)
	* output of parsing one file is an ordered list of these byte offsets
	* create a mini-language for querying this list for a range of bytes satisfying some criterion (in particular, the range of bytes containing the documentation for a token that is identified by a given anchor string)

[ ] parse less stuff
	* among HTML files, only need to parse class docs (to get delegate methods and notifications); everything else we can tell from the docset index
	* can we count on the doc file itself to tell us a protocol is informal?  if so, may not need to parse headers

[ ] store stuff on disk so it doesn't have to be reparsed
	* use CoreData to store

[ ] save less stuff in memory
	* query on an as-needed basis from the docset index and the CoreData storage instead of storing everything in memory


===== cosmetics =====

[ ] new icons
[ ] clean up window layout -- overlapping views, etc.
	[ ] put a splitter in the middle section
[ ] make the iPhone version visually distinctive
	[ ] somehow parametrize the UI (different background colors, etc.)
	[ ] create alternate icon for the iPhone version
[ ] nicer credits: bold names and list them alphabetically (perhaps with version number?)


===== dev stuff =====

[ ] prune away code that supported the old way of parsing
[ ] clean up copyrights
[ ] change hosting?


----------------------------------------------------------

[ ] CGDisplayCurrentMode -> CFDictionaryRef opens browser (CoreFoundation)

[ ] remember scroll position in history

[ ] in topic browser, select NSWindow and then NSViewController -- does a weird sideways scrolling thing, and the horizontal scroller doesn't update

[ ] iPhone version could have different criteria for "looks like valid dev tools path"

[ ] SubEthaEdit search Service only hits Mac OS ("classic") AppKiDo

[ ] why does it take so long to load AddressBook -> Protocols -> <ABImageClient>?

[ ] why do some searches take so long?  "cursor" is slow, yet "o" is fast even though it returns a superset of results
	* clue: I think it's the "<<" characters that get drawn in the search results

[ ] odd -- the small dividers for the split views aren't small

[ ] fuzzy table contents -- double drawing?
	* seems to have been fixed when I stopped using ak_stripHTML on the strings we display in the doc list
	* oops, that didn't really fix the bug, yet for some reason it seems better

[ ] AddressBook -> Types & Constants -> shows a "Constants" subtopic with no docs

[ ] possible confusion: in AppKit Constants, there's "Cell Types [NSCell]" and "NSCellType [NSCell]"; perhaps no more confusing than the NSCell doc itself -- except they're so far apart in the doc list it may not be clear they're related; maybe should reorg so "Constants" and "Data Types" are separate topics -- this would allow another level of subdivisions

[ ] show progress indicator during search, number of results when done

[ ] lower the memory profile

[ ] look into Spaces bug

[ ] Use RBSplitView.

[ ] if you hide quicklist, move window near left edge of screen, and restore quicklist, the window should be pushed right to make room for the whole quicklist to be visible

[ ] Favorites menu shouldn't just say "add Functions to favorites"; should be "add AppKit Functions to favorites"

[ ] make sure breaking delegate and notification connections in dealloc, as I argued one should
[ ] check for memory leaks in general

[ ] prefs "use default appearance" is buggy

[ ] possible radar: request performSelector:afterDelay: (without a withObject:)
[ ] report objective c typo in text submenu

[ ] why isn't "NSAttributedString Application Kit Additions Reference" showing up in the General doc list for NSAttributedString?  (It doesn't in 0.971 either)

[ ] in splash screen, don't say parsing framework unless it exists (e.g. UIKit for Mac OS)

[ ] review behaviorDocPathsForFramework

[ ] AKPropertiesSubtopic should be an AKRealMethodsSubtopic (for behavior, not just class)

[ ] equivalent of "view classes" is what for uikit?

[ ] rename fromPrefDictionary: to xxxFromPrefDictionary: in various classes

[ ] why is Carbon showing up???

[ ] should [self release] be [[super init] release]?

[ ] ping Cathy re: subversion, and UI question re: iPhone support

[ ] could CoreFoundation work?

[ ] had an idea once upon a time to offer the option of small-style contextual menus

[ ] quicklist includes NSButton among classes with delegates, but it doesn't technically have one
	[ ] WebView does not appear in list of classes with delegates

[ ] maybe force-exclude XgridFoundation from frameworks, as with Carbon?

[ ] put web site into svn

[ ] maybe move hosting to Dreamhost to get better stats etc.?

-------------------------------------------------

===== 0.978: done =====

[x] search for CGRect doesn't find it even though it's there in ApplicationServices -> Data Types and clicking on a link to it works (eg from CGRectContainsPoint); but search for CGPoint *does* find it, and so does cgsize
	* found it: was breaking from loop prematurely in _searchNamesOfGlobals

[x] add check for *latest* iPhone docset, e.g., iPhone 2.0 vs. iPhone 2.1

[x] add check for *latest* iPhone docset, e.g., iPhone 2.0 vs. iPhone 2.1

[x] WebKit formal protocol WebPlugInViewFactory appears in 971, not 980

[x] update credits
	[x] add Gus Mueller to credits
	[x] remember to thank Gerriet yet again

[x] bump version to 0.98 for release

[x] replace [self dealloc] with [self release]

[x] change <DIGSLog.h> to "DIGSLog.h"

[x] support NSFoo* for prefix searches

[x] fix "go" menu
	* go back to the model of a single app-wide database, but this time as an ivar of AKAppController

[x] Handle files structured like CGGeometry/Reference/reference.html.
	* note that it's a functions, constants, _and_ data types doc
	* similarly, class docs can also contain constants

[x] what framework do I need to get CGPoint?  e.g. CALayer -> Instance methods -> containsPoint:
	* seems to be ApplicationServices?
	* seems like CF is also needed
	* also tricky stuff like links to CGAffineTransform / "Transform"

[x] figure out //.../doc/c_ref links
	* like NSMutableString replaceCharactersInRange:withString: -> NSRange
	* seems to be solved by new approach in AKLinkResolver, using AKSearchQuery

[x] Foundation has two Constants nodes called "Input and Output Options" from two different class docs: the one for NSXMLDocument and the one for NSXMLNode.

[x] NSString -> instance methods -> boundingRectWithSize:options:attributes: (an AppKit method) -> NSStringDrawingOptions -> on Tiger, opens web page (note: was the same in 971); on Leopard, works okay; it's because the old-style parsing doesn't pick up the "Constants" sections in behavior docs

[x] Foundation constants -> Personality Options -> click on NSMapTableStrongMemory -- is a c_ref link, wants to go to class doc file
	* file:///Developer/Documentation/DocSets/com.apple.ADC_Reference_Library.CoreReference.docset/Contents/Resources/Documents/documentation/Cocoa/Reference/NSMapTable_class/Reference/NSMapTable.html#//apple_ref/doc/c_ref/NSMapTableStrongMemory
	* can be smarter in AKLinkResolver -- use AKSearchQuery (and add "exact match" as option in AKSearchQuery)

[x] add another level of debug, and use *that* for the super-verbose output during parsing

[x] test with Xcode 2.5, using the Mini
	* compared XML dumps -- not getting "Data Types" for Foundation or AppKit
	* fixed: it was a typo: "Datatypes" instead of "DataTypes" when looking at file name to decide whether to parse it

[x] on Leopard, not picking up NSURLClient whereas 971 does
	* that's okay -- it's a "not recommended" informal protocol, and the doc lists no methods for it

[x] make sure Control-(number) works on Tiger/2.5

[x] add Gerriet's changes to link handling

[x] make _database an AKWindowController ivar (no more single +defaultDatabase)

[x] get dev tools path working in prefs panel

[x] establish dev tools path during startup

[x] use the new-style anchors to resolve links where possible

[x] Prefs -> Frameworks -- add buttons to select/deselect all

[x] CALayer -> Delegate Methods -> -displayLayer: -> click the "display" link -> nothing happens (it's an instance method of CALayer)

[x] CALayer -> Properties -> actions -> click "actionForKey:" link -> opens HTML in browser (it's an instance method of CALayer)

[x] interfaces can have properties too (e.g., CAMediaTiming)

[x] require QuartzCore so that CIImage, CIColor don't end up as top-level classes
	[x] make un-deselectable in the prefs panel
	[x] move it to the top of the list in the prefs panel

[x] sort framework names in popup in quicklist drawer

[x] don't list appkit if not available (i.e., for iPhone; likewise UIKit)

[x] bump version to 0.972 during dev
	* seems to suffice to replace string in Info.plist and InfoPlist.strings?

[x] add support for "Properties" section (see UIImagePickerController or CALayer)

[x] change key equivalents for subtopics and favorites

[x] make sure search handles properties

[x] not picking up WebView delegate methods

[x] withClassNode etc. should be topicWithClassNode

------------------

[ ] go back to [AKDatabase defaultDatabase]
	* possibly pull _database out of AKTopic
	* hm -- why did I want to do this?  it was to prevent AKClassNode from having to know about AKAppController

[ ] cell classes are n/a for iPhone (UITableViewCell is actually a view)

[ ] add some UI to choose which iPhone SDK to use -- a tab in the prefs panel that only appears in iPhone mode

[ ] subtopic list should scroll to visible, e.g., if you search for NSNextMapEnumeratorPair, "Managing Map Tables" is far down the subtopic list and isn't visible

[ ] script to go through and make sure all imports are actually necessary

[ ] in Xcode, search for "setTimeOffset:" finds the *property* timeOffset

[ ] can DIGSLogExitingMethodPrematurely take varargs?

[ ] shouldn't use Command-+ to add column; it's standard for increasing font size

[ ] check whether .h parser handles class extensions
	* _are_ there any extensions I need to parse?

[ ] add the ability to look things up / do searches in the Xcode doc window

[ ] I think can stop parsing headers when docset queries fully fleshed out

[ ] why sometimes slow to jump to a favorite?

[ ] do a screencast

[ ] technical meaning of "member"?

[ ] make the splash panel a cancellable modal panel

[ ] get rid of "shadowing" warnings

look into log4cocoa

support wildcards in search string
	support multiple search strings?

show feedback during search
	show number of search results

* akd prefs frameworks space bar doesn't work to toggle selection

get latest fmdb

show which OS version deprecated methods were deprecated in

make sure parsing class extensions

rename digitalspokes plist
	maybe try to get the domain name back?

AddressBook constants not appearing in 980, but they do in 971

QTKit types and constants contains only a "Constants" group in 980, only a "Data Types" group in 971; the subnodes of the two groups are disjoint

weirdness if browsing e.g. CoreData Constants and click on one of the clickable constants -- see what happens to topic browser

use NSUInteger

search for "::" doesn't find -[CIImageProvider provideImageData:bytesPerRow:origin::size::userInfo:]

hm, *Carbon* is showing up, with two protocols: IMKTextInput and IMKUnicodeTextInput; and the -insertText: method for the latter is not showing up (not documented, I assume)

omit frameworks with no classes from the quicklist popup

use tabview for the doc view

check out latest fmdb

open link in new window doesn't work (e.g., runModalForWindow: links to stopModal)
	- New window doesn't do anything either
